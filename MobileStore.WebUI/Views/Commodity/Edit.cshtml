@model MobileStore.Domain.Entities.Commodity

@{
    //Layout = null;
}


    @using (Html.BeginForm("Edit","Commodity"))
    {
        @Html.AntiForgeryToken()
        
        <div class="form-horizontal">
            <h4>Commodity</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CommodityID)

            <div class="form-group">
                @Html.LabelFor(model => model.ProductModelID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("ProductModelID",String.Empty)
                    @Html.ValidationMessageFor(model => model.ProductModelID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SellerID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SellerID", String.Empty)
                    @Html.ValidationMessageFor(model => model.SellerID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="input-group date datepicker" data-provide="datepicker">
                        <div class="input-group-addon">
                            <span class="glyphicon glyphicon-th"></span>
                        </div>
                        @Html.EditorFor(model => model.PurchaseDate, new
                   {
                       htmlAttributes = new { @class = "form-control" }
                   })
                    </div>
                    @Html.ValidationMessageFor(model => model.PurchaseDate, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.PurchasePrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Condition, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Condition, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Condition, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SimLockerID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("SimLockerID", String.Empty)
                    @Html.ValidationMessageFor(model => model.SimLockerID, "", new { @class = "text-danger" })
                </div>
            </div>
    
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                    @Html.ActionLink("Back to List", "Index",null, new { @class = "btn btn-default" })
                </div>
            </div>
        </div>
    }

@section scripts
    {
       <script type="text/javascript">
            $(document).ready(function () {
                //sprawdzenie czy edycja dotyczy nowego towaru, jeżeli tak ustawienie bieżącej daty
                if ($('#PurchaseDate').val() == '0001-01-01' || $('#PurchaseDate').val() == '1/1/0001'){ 
                    var currentDate = new Date();
                    var currentYear = currentDate.getFullYear();
                    var currentMonth = ((currentDate.getMonth().length + 1) === 1) ? (currentDate.getMonth() + 1) : '0' + (currentDate.getMonth() + 1);
                    var currentDay = currentDate.getDate();
                    $('#PurchaseDate').val(currentYear + "-" + currentMonth + "-" + currentDay) ;
                };//koniec if

                $('.datepicker').datepicker({
                    format: "yyyy-mm-dd",
                    todayHighlight: true,
                    autoclose: true
                }); //koniec datepicker
            });//koniec funkcji ready
        </script>
    } 